package Bitboards;

public class MoveGenerator {



    public static int[] generateMoves(Position position){
        return legalMoves[(int)((position.red | position.yellow) >> 35)];
    }


    public static boolean isFull(Position position){
        return ((position.red | position.yellow) >> 35) == 127;
    }

    static int[][] legalMoves = new int[][]{
            {3,2,4,1,5,0,6},
            {3,2,4,1,5,6},
            {3,2,4,5,0,6},
            {3,2,4,5,6},
            {3,4,1,5,0,6},
            {3,4,1,5,6},
            {3,4,5,0,6},
            {3,4,5,6},
            {2,4,1,5,0,6},
            {2,4,1,5,6},
            {2,4,5,0,6},
            {2,4,5,6},
            {4,1,5,0,6},
            {4,1,5,6},
            {4,5,0,6},
            {4,5,6},
            {3,2,1,5,0,6},
            {3,2,1,5,6},
            {3,2,5,0,6},
            {3,2,5,6},
            {3,1,5,0,6},
            {3,1,5,6},
            {3,5,0,6},
            {3,5,6},
            {2,1,5,0,6},
            {2,1,5,6},
            {2,5,0,6},
            {2,5,6},
            {1,5,0,6},
            {1,5,6},
            {5,0,6},
            {5,6},
            {3,2,4,1,0,6},
            {3,2,4,1,6},
            {3,2,4,0,6},
            {3,2,4,6},
            {3,4,1,0,6},
            {3,4,1,6},
            {3,4,0,6},
            {3,4,6},
            {2,4,1,0,6},
            {2,4,1,6},
            {2,4,0,6},
            {2,4,6},
            {4,1,0,6},
            {4,1,6},
            {4,0,6},
            {4,6},
            {3,2,1,0,6},
            {3,2,1,6},
            {3,2,0,6},
            {3,2,6},
            {3,1,0,6},
            {3,1,6},
            {3,0,6},
            {3,6},
            {2,1,0,6},
            {2,1,6},
            {2,0,6},
            {2,6},
            {1,0,6},
            {1,6},
            {0,6},
            {6},
            {3,2,4,1,5,0},
            {3,2,4,1,5},
            {3,2,4,5,0},
            {3,2,4,5},
            {3,4,1,5,0},
            {3,4,1,5},
            {3,4,5,0},
            {3,4,5},
            {2,4,1,5,0},
            {2,4,1,5},
            {2,4,5,0},
            {2,4,5},
            {4,1,5,0},
            {4,1,5},
            {4,5,0},
            {4,5},
            {3,2,1,5,0},
            {3,2,1,5},
            {3,2,5,0},
            {3,2,5},
            {3,1,5,0},
            {3,1,5},
            {3,5,0},
            {3,5},
            {2,1,5,0},
            {2,1,5},
            {2,5,0},
            {2,5},
            {1,5,0},
            {1,5},
            {5,0},
            {5},
            {3,2,4,1,0},
            {3,2,4,1},
            {3,2,4,0},
            {3,2,4},
            {3,4,1,0},
            {3,4,1},
            {3,4,0},
            {3,4},
            {2,4,1,0},
            {2,4,1},
            {2,4,0},
            {2,4},
            {4,1,0},
            {4,1},
            {4,0},
            {4},
            {3,2,1,0},
            {3,2,1},
            {3,2,0},
            {3,2},
            {3,1,0},
            {3,1},
            {3,0},
            {3},
            {2,1,0},
            {2,1},
            {2,0},
            {2},
            {1,0},
            {1},
            {0},
            {}
            };


    static int[] order = new int[] {3,2,4,1,5,0,6};


    public static void main(String[] args){
        int[][] result = new int[128][];

        for(int i = 0; i < 128; i++){
            int counter = 0;
            for(int j : order){
                if((i & ((int)Math.pow(2,j))) == 0) counter++;
            }
            result[i] = new int[counter];
            counter = 0;
            System.out.print("{");
            for(int j: order){
                if((i & ((int)Math.pow(2,j))) == 0){
                    result[i][counter] = j;
                    if(counter == 0){
                        System.out.print(j);
                    } else {
                        System.out.print("," + (j));
                    }
                    counter++;
                }
            }
            System.out.println("},");

        }
    }

}
